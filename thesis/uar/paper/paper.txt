ABSTRACT

Current bus networks do not provide accurate schedules, making them unreliable and inconvenient for passengers.  Providing passengers with accurate predictions of bus arrival times is necessary to reduce wait times.  Neural nets have achieved high accuracy in predicting bus arrival times when compared with historical and statistical models.  However previous research have used small datasets, which only allows for relatively small models and prevents studying periodic effects.  This research uses a larger neural net trained by a dataset which spans several years, in order to improve accuracy of predictions and study periodic effects.  We find that although periodic effects are dominated by intrinsic properties of the bus network, larger neural networks can still achieve high accuracy in predicting bus arrival times.

INTRODUCTION

Bus schedules need better reliability for passengers in order to increase the appeal of public transport.  Commute times for US workers have increased steadily over the past several decades despite increases in transit system capacity.  Most workers commute alone in private cars, and only 10.8% use public transport.  Public transportation has many benefits including reduced pollution, traffic, and cost for commuters.  Nevertheless, buses are less convenient than private cars because they run behind schedule and are unreliable for commuters.  Providing accurate arrival time predictions to passengers decreases wait times for passengers, and increases the overall efficiency of the bus network.

The problem of predicting bus arrival times is as follows. Passengers riding the bus would like to know when the bus will arrive at each stop so that they can catch the bus on time and minimize the time they have to wait. Buses publish schedules, but they are typically only available for a subset of stops, sometimes called checkpoint stops. When a bus reaches a checkpoint stop, it will wait if it is ahead of schedule, so that it can remain consistent with passenger expectations. Nevertheless, buses rarely stay on schedule, and schedule deviations tend to propagate. In practice bus schedules are rarely reliable. It is therefore very valuable for passengers to have accurate predictions of bus arrival times. These predictions can derived from several known factors in order to predict future arrival times. The factors used to predict include arrival times at previous stops, current and average velocity, travel times between stops, passenger counts, and current network load. Only a subset of these factors may be available depending on the bus network being studied. The most important predictions are the times a bus will arrive at then next several stops. Prediction accuracy tends to go down for stops very far in the future, however passengers typically will only desire to know the next few upcoming arrival times. Another consideration for generating predictions for bus arrival times is that algorithms need to be reasonably fast in order to provide utility for passengers. Predictions should be delivered to passengers in real time so that they have knowledge of when to arrive at the stop. This information is typically delivered via mobile apps such as Google Maps, and not typically available from the bus network authority themselves. Predictions should also be able to be updated in an online fashion as conditions change. Traffic can be very volatile and predictions need to be updated quickly. This limits the types of models which can be used.

Many techniques have been used to try to predict arrival times to reduce waiting times for passengers, including historical models, regression, and neural networks.  A few key features of bus networks suggest that sophisticated models may be effective.  Buses traffic is more difficult to predict than normal traffic because buses have to adhere to a schedule and pick up passengers.  Additionally, buses in a route exhibit a phenomenon called clumping.  As a bus starts to run behind schedule, more passengers will arrive at future stops.  The bus will then to have to spend more time at future stops to pick up passengers, which causes it to fall more behind schedule.  Previous buses will then catch up to that bus, causes the buses on that route to clump together.  These complicated effects cannot be captured by simple models.  Sophisticated statistical models and machine learning models like neural networks have shown the best success in predicting arrival times.  However, current research works with relatively small data sets. This prevents incorporating periodic effects into the model.

This research uses neural networks to try to improve upon prediction accuracy by exploiting periodic effects. Time series data like bus arrival times exhibits periodic behavior across days, weeks, months, and years. For example, traffic surges during rush hour in a predictable pattern throughout the day, and holiday transit patterns repeat every year. Our model is trained using Massachusetts Bay Transportation Authority (MBTA) bus GPS data which spans several years. This is the largest dataset used for predicting bus arrival times. Models are trained across periods to determine whether neural nets can pick up on periodic effects to improve the prediction of arrival times.

PREVIOUS WORK

Neural networks have shown the best accuracy for predicting bus arrival times. Studies have been conducted in several locations throughout the world including several cities in the US as well Canada, China and Brazil. Several techniques have been used to predict bus arrival times including historical models, statistical models, and machine learning methods. Even with temporally limited data, neural networks are very effective at predicting arrival times. A study in Texas compared the accuracy of neural networks as compared with historical and regression based models and found that neural nets produce the best accuracy. For this reason our study uses neural networks.

Previous studies using neural networks uses relatively small models. Chien, Ding and Wei used artificial neural networks (ANNs) to predict bus arrival times. However the network architecture was the most basic possible, with a single input layer, hidden layer and output layer. Even so, their models show good accuracy and this research borrows the same feature vectors. More sophisticated neural nets have been shown to be effective in other use cases in recent years, however they have not been applied to this problem. The complicated patterns and phenomena in bus networks suggest that large models may be effective. Because of this we use larger neural nets with more nodes and hidden layers.

Current research to predict bus arrival times uses limited data sets which are not suitable for analyzing seasonal effects. Large bus GPS data sets are rare. Some studies get around this by simulating data (http://ascelibrary.org/doi/pdf/10.1061/(ASCE)0733-947X(2002)128:5(429)) A study in China uses data spanning a month.  Deep neural nets particularly require a large amount of data, and the lack of data motivates studies to use smaller models to avoid overfitting. However, the size of the MBTA dataset allows for larger models which may perform better compared to previous models.

Our research borrows the feature set from previous research and uses neural nets as they show the best accuracy. However, it departs from previous research by utilizing a larger dataset as well as larger models in order to exploit seasonal effects and improve the accuracy of predictions.

FEATURE SELECTION AND EXTRACTION

This research uses publicly available GPS data from the MBTA to calculate arrival times for buses at each stop. The data set consists of three main sections. First it contains information about bus routes with the name, latitude and longitude of stops. Second it contains information about bus schedules for weekdays, weekends and holidays for each route. Finally it contains GPS data for every bus on the network, along with metadata about which route the bus is on and whether it is inbound or outbound. The GPS data is obtained by polling the MBTA server periodically. The amount of GPS data available spans several years. However schedules for bus routes change often and archived records are not publicly available from the MBTA. Additionally, bus stop locations change over the years, and it is difficult to determine the location of a bus stop a past point in time. Furthermore, GPS data can be inaccurate especially in urban valleys which are common in an urban area like Boston. All of these considerations were taken into account during feature extraction.

Precautions were taken while extracting the features from the MBTA GPS data. First, data from only the previous two years were used to minimize the amount of stops changing location as well as schedule changes. The route selected for testing is relatively long, with 27 stops, and it very straight, with only a few turns at the beginning and end. Minimizing the number of turns ensure that GPS data does not overlap. For example, if a bus has to make a U-turn, it can be difficult to tell which direction it was heading from the raw GPS data. For this reason we only consider the stops in the middle of the route when training the model. To determine the arrival time at each stop, GPS locations of the buses are compared to the GPS location from the bus stop data set. After the bus is within a certain threshold of the stop, the time is noted. Due to inaccuracy of GPS data, this threshold must be tuned. A higher threshold will capture more of the data but arrival times will be less accurate. A lower threshold will yield more accurate arrival times, however some of the buses will never read GPS locations within the threshold due to noise, leading to a missing value for its arrival time. The inputs to the neural net consider one full trip of a bus from its first stop to its final stop. Therefore only buses which have a recorded arrival time at every stop are considered as input data to the model. About half of the data met this criteria, which was plenty for testing and evaluating the model.

The bus data were partitioned in order to capture trends in bus traffic. Because buses have different schedules on weekdays and the weekend the data were partitioned according to weekday, Saturday or Sunday. Buses arrive at different intervals throughout the day, so the data were partitioned so that in each partition the buses at a given stop arrive at the same intervals. Finally, the data were partitioned by month and year so that seasonal effects could be studied.

The features selected for the neural net were the travel times for a bus between each stop along the route. Several features are commonly used to predict bus arrival times. Travel time, or the difference in time between each stop on a route is almost always used. Arrival time, or the time it takes to get from the first stop in the route to each successive stop is also common. Additionally neural nets use dwell time, or the amount of time a bus stays at each stop before moving on. Finally some models use schedule adherence, or the difference between the arrival time at each stop and the scheduled arrival time by the bus system. Due to the difficulty of determining bus schedules across years, schedule adherence was not used as a feature as it would be unreliable. Arrival time does not work well with neural nets because for a long route, the magnitudes across stops will be very different, weighting later stops much more. Travel times are much more similar in magnitude, so travel times were used instead of arrival time. Dwell time is difficult to compute from GPS data so it was not used.

CASE STUDY

In order to test the model, the 1 bus was selected. It runs from Harvard in Cambridge to Dudley Station in Boston via Massachusetts Avenue, passing 25 stops along the way. The stops vary in distance, with the longest around half a mile and the shortest several hundred meters. This route was chosen because it is well traveled and relatively long compared with other MBTA routes. Only inbound buses were analyzed.

MODEL DEVELOPMENT

Several possible model architectures have been suggested for predicting bus arrival times. For an overview of modeling for bus networks see (Chien, Steven I-Jy, Yuqing Ding, and Chienhung Wei. "Dynamic bus arrival time prediction with artificial neural networks." Journal of Transportation Engineering 128.5 (2002): 429-438.)


The final model architecture used three fully connected hidden layers with Sigmoid activation functions. This architecture is visualized in Figure $. The inputs to the neural net were the travel times between stops, and the output is the predicted travel time to the next stop. By simply adding the prediction to the arrival time at the last stop, one can calculate the predicted arrival time at the next stop. Furthermore, the network can predict the travel times to stops even further down the route. The actual value of these travel times can be computed as follows.

$$Eqn$$

One would expect the accuracy of these predictions to increase as the predictions are further in the future. This is because as you travel further down the route, random variations in the traffic conditions accumulate, leading to higher variance in the arrival times. Due to this reason, most systems can only provide accurate predictions for around 3-8 stops before the error reaches a level which is akin to random guessing. So two hyperparameters of the model are the number of input travel times, and the number of stops ahead to predict. Including too few input travel times does not give the neural net enough information to accurately predict. However, travel times for stops which are much before the stop to predict will have little impact on the final travel time, and thus will essentially be noise for the neural net. Accuracy can be plotted as function of the number of stops in the future to predict. After some tuning, the number of input travel times to use was set to 10.

Sigmoid activations functions are commonly used for transportation systems so they were selected. (Hagan, M. T., Demuth, H. B., and Beale, M. ~1996!. Neural network design, PWS, Boston.) Most current research used a single fully connected hidden layer, however they use a limited amount of data so using more layers would subject them to overfitting. This research used multiple hidden layers with in order to attempt to capture the intricate periodic patterns in the bus data. Because the neural net produces real valued outputs, a square loss was used to generate predictions. This loss function is obtained as follows.

$$Eqn$$

Standard stochastic gradient descent was used to train the model, with a fixed learning rate of 0.0001, a mixed momentum of 0.9, and a regularization coefficient of 0.0005.

MODEL EVALUATION

In order to test whether neural net can utilize periodic effects to improve bus arrival time prediction accuracy, the training and validation data were partitioned across the desired period. In this case the periods being studied were across months and weeks.

First, a baseline accuracy was established using a large training set of around 5000 data points which span around a year. This is a larger training set than most previous studies, which use several hundred data points.

The first test run assessed whether neural nets could pick up on patterns throughout the week. In order to determine this, the training set was selected from a series of data from Mondays. Two test sets were then selected. The first set was from the Monday from a week later. The second set was from the Tuesday from a week later. If the neural net was able to pick up on periodic effects, one would expect the validation accuracy from the first set to be higher than the validation accuracy from the second set. The accuracy can also be compared across different days of the week in order to assess the correlation between different days of the week. If two days are highly correlated, data from either of them can be used to predict the other. The accuracy of each set is shown in Figure $.

The first observation is that large neural nets are effective at predicting bus arrival times, even relatively far in the future. The root mean square error in the graph corresponds to providing predictions which are accurate to plus or minus a minute. This falls within the accuracy range for past research. The second observation is that periodic effects are significantly captured by this model. If the neural net was able to pick up on weekly patterns, the blue curve should fall below the red curve. This is not the case. Instead both curves follow roughly the same path, indicating that test prediction quality is somewhat independent of which day training data comes from.

Although the neural net does not pick up on periodicity, the similarity between the two curves suggests something about the nature of predicting arrival times. In order to understand this it is necessary to look at the variance in bus travel times between stops. The standard deviation in travel times between bus stops is shown in Figure $.

The standard deviation varies noticeably between different links in the network. In particular, the standard deviation at checkpoint stops is very low. This can be seen in the graph at for example stop 1, 13, and 20. Additionally, a large peak can be seen at stop 7. This link in the route happens when the bus crosses the Harvard Bridge across the Charles River, which is a bottleneck for traffic entering Boston from Cambridge. This explains the high variance. Finally, comparing the variance of travel times between stops with the prediction error, it is clear that these factors dominate any seasonal effects which may be present. High variance links lead to high error in estimation due to more stochastic effects occurring at those portions of the network. Despite comparing different days of the week in the validation sets, both sets achieve roughly the same accuracy. This indicates that seasonal effects are dominated by intrinsic properties of the bus route. The properties which lead to different variances amongst links in the route are number of stoplights, number of lanes, and outside traffic.

CONCLUSION

Stochastic effects in bus networks cause buses to run off of posted schedules. This unpredictability degrades the network efficiency, increases wait times, and makes public transit less desirable for passengers. Providing accurate predictions of bus arrival times decreases wait time for passengers and increases the utility of the network. This research uses a neural network with three hidden layers to estimate bus arrival times for the 1 bus in Boston. The scale of the dataset which trains the network is much larger than previous studies, which use a few months of data rather than years. Any periodic effects that may be present in the long term data are dominated by local effects of the network such as variance in travel time between stops. We find that large models trained on long term data can accurately predict bus arrival times several stops ahead.
